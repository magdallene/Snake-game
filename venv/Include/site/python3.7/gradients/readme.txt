date:        09.08.2007

project:     gradients

who:         DR0ID
             mail:  dr0id@bluewin.ch
             homepage:  http://www.mypage.bluewin.ch/DR0ID/index.html 
    
artwork:     DR0ID (if any)

how to run:  see comments, for demos: gradients_demo.py, vgrade.py
            
licenses:    public domain

dependecies: pyhton 2.4 (www.python.org)
             pygame 1.7.1 (www.pygame.org)

tools use:   spe (http://pythonide.stani.be/)

comments:    It is actually a lib called gradients.py, so to use it you will have to import 
             gradients to your project
             
             vgrade.py
             I have adapted this example code to show that vertical and horizontal linear 
             gradienst are only 2-3 times slower than numeric. If you know a faster way to 
             generate gradients in pygame, please tell me. On the left you see the gradient 
             generated by numeric, on the right side the one gerenated by my code.
             
             gradients_demo.py
             shows what you can do with the different functions.
             First line shows the linear gradients. The second line shows the non linear 
             gradients: you can pass in a function how the color has to be changed over 
             space. Naturally you can do it for each colorcomponent, including alpha. 
             For that purpose there are some keys defined:

             'r','g','b','a' change the function used for each color channel. On the bottom 
             left you can see the function for each color channel. 

             'm' changed blit mode, only available in pygame 1.8

             't' changes the type of shape you can manipulate.

             'space' change the color used

             'arrow keys' use them to move the spot on the circle and the square around

             If you click, you set the startpoint, if you press 'ctrl'-click then you set the
             endpoint of a gradient. The pink line shows you the connection from startpoint to 
             endpoint.
             
             
             
